# This is a basic workflow to help you get started with Actions

name: exploratory-notebook-test-binder

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '5 4 * * 0'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Two tests are sufficient because the other notebooks are already
        # tested in the manual install and the timeline notebooks are almost
        # identical
        target: [Data_exploration_template.ipynb, timeline_car_scooter_brex_san_jose.ipynb]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2

    - name: Create a docker image using repo2docker
      id: install-using-repo2docker
      uses: shankari/repo2docker-action@master
      with:
        IMAGE_NAME: "mobilitynet"

    - name: Test the interactive timeline
      run: |
        echo "image SHA was ${{ steps.install-using-repo2docker.outputs.IMAGE_SHA_NAME }}"
        OUT_FILENAME=`echo ${{ matrix.target }} | sed "s/.ipynb/_out.ipynb/"`
        echo "output filename = $OUT_FILENAME"

        mkdir -p /tmp/artifacts
        # docker run -v /tmp/artifacts:/artifacts ${{ steps.install-using-repo2docker.outputs.IMAGE_SHA_NAME }} "python bin/run_notebooks.py ${{ matrix.target }} && cp $OUT_FILENAME /artifacts"
        # docker run -v /tmp/artifacts:/artifacts ${{ steps.install-using-repo2docker.outputs.IMAGE_SHA_NAME }} "which python && python --version && ls bin && ls ${{ matrix.target}} && ls /artifacts"
        docker run -v /tmp/artifacts:/artifacts ${{ steps.install-using-repo2docker.outputs.IMAGE_SHA_NAME }} << EOF
        echo "About to run notebooks"
        python bin/run_notebooks.py ${{ matrix.target }}
        TEST_EXIT_CODE = $?
        echo "Existing exit code = $TEST_EXIT_CODE, copying $OUT_FILENAME to artifacts"
        cp $OUT_FILENAME /artifacts
        echo "Exiting with the correct exit code"
        exit $TEST_EXIT_CODE
        EOF

        echo "Checking to see that the output file is there"
        ls /tmp/artifacts

        echo "::set-output name=OUT_FILENAME::${OUT_FILENAME}"

    - name: Upload result for the interactive timeline
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.run-test.outputs.OUT_FILENAME }}
        path: /tmp/artifacts/${{ steps.run-test.outputs.OUT_FILENAME }}

